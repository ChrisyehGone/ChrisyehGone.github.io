<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Gone's Blog]]></title>
  <subtitle><![CDATA[Try not to become a man of success but rather try to become a man of value.——Albert Einstein]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://ChrisyehGone.github.io/"/>
  <updated>2014-07-04T04:56:37.604Z</updated>
  <id>http://ChrisyehGone.github.io/</id>
  
  <author>
    <name><![CDATA[Chrisyeh]]></name>
    <email><![CDATA[chrisyehzz@gmail.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[WPF用户控件系列教程：(1)文字滚动用户控件]]></title>
    <link href="http://ChrisyehGone.github.io/2014/07/01/1WPF-UserControl-Series/"/>
    <id>http://ChrisyehGone.github.io/2014/07/01/1WPF-UserControl-Series/</id>
    <published>2014-07-01T02:16:09.000Z</published>
    <updated>2014-07-04T03:40:28.000Z</updated>
    <content type="html"><![CDATA[<p>首先，我们新建一个UserControl，并命名为MarqueeTextControl，然后在试图设计器中添加Canvas和TextBlock控件：</p>
<pre><code><span class="tag">&lt;<span class="title">UserControl</span> <span class="attribute">x:Class</span>=<span class="value">"Test.MarqueeTextControl"</span>
    <span class="attribute">xmlns</span>=<span class="value">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span>
    <span class="attribute">xmlns:x</span>=<span class="value">"http://schemas.microsoft.com/winfx/2006/xaml"</span>
     &gt;</span>
    <span class="tag">&lt;<span class="title">Canvas</span>  <span class="attribute">ClipToBounds</span>=<span class="value">"True"</span> <span class="attribute">Name</span>=<span class="value">"canMain"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span>  <span class="attribute">Name</span>=<span class="value">"tbmarquee"</span>&gt;</span> <span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">Canvas</span>&gt;</span>
<span class="tag">&lt;/<span class="title">UserControl</span>&gt;</span>
</code></pre><p>其次，我们需要定义几个属性：</p>
<ol>
<li>MarqueeType：滚动的种类，枚举类型</li>
<li>MarqueeContent：滚动的文字，String类型</li>
<li>MarqueeTimeInSeconds：滚动的间隔，double类型</li>
</ol>
<p>定义如下：</p>
<pre><code><span class="keyword">public</span> <span class="keyword">enum</span> MarqueeType
{
    LeftToRight,
    RightToLeft,
    TopToBottom,
    BottomToTop
}

<span class="keyword">private</span> MarqueeType _marqueeType;

<span class="keyword">public</span> MarqueeType MarqueeType
{
    <span class="keyword">get</span> { <span class="keyword">return</span> _marqueeType; }
    <span class="keyword">set</span> { _marqueeType = <span class="keyword">value</span>; }
}       

<span class="keyword">public</span> String MarqueeContent
{
    <span class="keyword">set</span> { tbmarquee.Text = <span class="keyword">value</span>; }
}

<span class="keyword">private</span> <span class="keyword">double</span> _marqueeTimeInSeconds;

<span class="keyword">public</span> <span class="keyword">double</span> MarqueeTimeInSeconds
{
    <span class="keyword">get</span> { <span class="keyword">return</span> _marqueeTimeInSeconds; }
    <span class="keyword">set</span> { _marqueeTimeInSeconds = <span class="keyword">value</span>; }
}
</code></pre><p>接下来就是滚动动画的实现了，我们在代码中定义四个滚动方法以及一个开始滚动入口：</p>
<pre><code><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从左到右滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LeftToRightMarquee</span>()
{
    <span class="keyword">double</span> height = canMain.ActualHeight - tbmarquee.ActualHeight;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(<span class="number">0</span>, height / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualWidth;
    doubleAnimation.To = canMain.ActualWidth;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.LeftProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从右到左滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RightToLeftMarquee</span>()
{
    <span class="keyword">double</span> height = canMain.ActualHeight - tbmarquee.ActualHeight;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(<span class="number">0</span>, height / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualWidth;
    doubleAnimation.To = canMain.ActualWidth;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.RightProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从上到下滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">TopToBottomMarquee</span>()
{
    <span class="keyword">double</span> width = canMain.ActualWidth - tbmarquee.ActualWidth;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(width / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualHeight;
    doubleAnimation.To = canMain.ActualHeight;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.TopProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从下到上滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BottomToTopMarquee</span>()
{
    <span class="keyword">double</span> width = canMain.ActualWidth - tbmarquee.ActualWidth;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(width / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualHeight;
    doubleAnimation.To = canMain.ActualHeight;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.BottomProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 开始滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="marqueeType"&gt;</span>滚动的方向<span class="xmlDocTag">&lt;/param&gt;</span></span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartMarqueeing</span>(MarqueeType marqueeType)
{
    <span class="keyword">if</span> (marqueeType == MarqueeType.LeftToRight)
    {
        LeftToRightMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.RightToLeft)
    {
        RightToLeftMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.TopToBottom)
    {
        TopToBottomMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.BottomToTop)
    {
        BottomToTopMarquee();
    }
}
</code></pre><p>最后就是调用了，在代码的构造函数添加载入事件：</p>
<pre><code><span class="keyword">public</span> <span class="title">MarqueeTextControl</span>()
{
    InitializeComponent();
    canMain.Height = <span class="keyword">this</span>.Height;
    canMain.Width = <span class="keyword">this</span>.Width;
    <span class="keyword">this</span>.Loaded += <span class="keyword">new</span> RoutedEventHandler(MarqueeTextControl_Loaded);
}

<span class="keyword">void</span> MarqueeTextControl_Loaded(<span class="keyword">object</span> sender, RoutedEventArgs e)
{
    StartMarqueeing(_marqueeType);
}
</code></pre><p>接下来，我们将调用这个写好的文字滚动用户控件。<br>在主窗体的视图设计器中，你可以选择使用工具箱来拖放文字滚动用户控件，也可以自己写代码。<br>先引入命名空间：</p>
<pre><code><span class="label">xmlns:</span>mar=<span class="string">"clr-namespace:Test"</span>
</code></pre><p>然后写控件：</p>
<pre><code><span class="tag">&lt;<span class="title">WrapPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Horizontal"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从左到右滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span> <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span>  <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"LeftToRight"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从右到左滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"RightToLeft"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从上到下滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"TopToBottom"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从下到上滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"BottomToTop"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
<span class="tag">&lt;/<span class="title">WrapPanel</span>&gt;</span>
</code></pre><p>给大家看下效果：<br><img src="/img/margintext.gif" alt="文字滚动控件"></p>
<a id="more"></a>]]></content>
    <summary type="html"><![CDATA[<p>首先，我们新建一个UserControl，并命名为MarqueeTextControl，然后在试图设计器中添加Canvas和TextBlock控件：</p>
<pre><code><span class="tag">&lt;<span class="title">UserControl</span> <span class="attribute">x:Class</span>=<span class="value">"Test.MarqueeTextControl"</span>
    <span class="attribute">xmlns</span>=<span class="value">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span>
    <span class="attribute">xmlns:x</span>=<span class="value">"http://schemas.microsoft.com/winfx/2006/xaml"</span>
     &gt;</span>
    <span class="tag">&lt;<span class="title">Canvas</span>  <span class="attribute">ClipToBounds</span>=<span class="value">"True"</span> <span class="attribute">Name</span>=<span class="value">"canMain"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span>  <span class="attribute">Name</span>=<span class="value">"tbmarquee"</span>&gt;</span> <span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">Canvas</span>&gt;</span>
<span class="tag">&lt;/<span class="title">UserControl</span>&gt;</span>
</code></pre><p>其次，我们需要定义几个属性：</p>
<ol>
<li>MarqueeType：滚动的种类，枚举类型</li>
<li>MarqueeContent：滚动的文字，String类型</li>
<li>MarqueeTimeInSeconds：滚动的间隔，double类型</li>
</ol>
<p>定义如下：</p>
<pre><code><span class="keyword">public</span> <span class="keyword">enum</span> MarqueeType
{
    LeftToRight,
    RightToLeft,
    TopToBottom,
    BottomToTop
}

<span class="keyword">private</span> MarqueeType _marqueeType;

<span class="keyword">public</span> MarqueeType MarqueeType
{
    <span class="keyword">get</span> { <span class="keyword">return</span> _marqueeType; }
    <span class="keyword">set</span> { _marqueeType = <span class="keyword">value</span>; }
}       

<span class="keyword">public</span> String MarqueeContent
{
    <span class="keyword">set</span> { tbmarquee.Text = <span class="keyword">value</span>; }
}

<span class="keyword">private</span> <span class="keyword">double</span> _marqueeTimeInSeconds;

<span class="keyword">public</span> <span class="keyword">double</span> MarqueeTimeInSeconds
{
    <span class="keyword">get</span> { <span class="keyword">return</span> _marqueeTimeInSeconds; }
    <span class="keyword">set</span> { _marqueeTimeInSeconds = <span class="keyword">value</span>; }
}
</code></pre><p>接下来就是滚动动画的实现了，我们在代码中定义四个滚动方法以及一个开始滚动入口：</p>
<pre><code><span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从左到右滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">LeftToRightMarquee</span>()
{
    <span class="keyword">double</span> height = canMain.ActualHeight - tbmarquee.ActualHeight;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(<span class="number">0</span>, height / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualWidth;
    doubleAnimation.To = canMain.ActualWidth;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.LeftProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从右到左滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RightToLeftMarquee</span>()
{
    <span class="keyword">double</span> height = canMain.ActualHeight - tbmarquee.ActualHeight;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(<span class="number">0</span>, height / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualWidth;
    doubleAnimation.To = canMain.ActualWidth;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.RightProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从上到下滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">TopToBottomMarquee</span>()
{
    <span class="keyword">double</span> width = canMain.ActualWidth - tbmarquee.ActualWidth;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(width / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualHeight;
    doubleAnimation.To = canMain.ActualHeight;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.TopProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 从下到上滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="keyword">private</span> <span class="keyword">void</span> <span class="title">BottomToTopMarquee</span>()
{
    <span class="keyword">double</span> width = canMain.ActualWidth - tbmarquee.ActualWidth;
    tbmarquee.Margin = <span class="keyword">new</span> Thickness(width / <span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);
    DoubleAnimation doubleAnimation = <span class="keyword">new</span> DoubleAnimation();
    doubleAnimation.From = -tbmarquee.ActualHeight;
    doubleAnimation.To = canMain.ActualHeight;
    doubleAnimation.RepeatBehavior = RepeatBehavior.Forever;
    doubleAnimation.Duration = <span class="keyword">new</span> Duration(TimeSpan.FromSeconds(_marqueeTimeInSeconds));
    tbmarquee.BeginAnimation(Canvas.BottomProperty, doubleAnimation);
}

<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> 开始滚动</span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;/summary&gt;</span></span>
<span class="comment"><span class="xmlDocTag">///</span> <span class="xmlDocTag">&lt;param name="marqueeType"&gt;</span>滚动的方向<span class="xmlDocTag">&lt;/param&gt;</span></span>
<span class="keyword">public</span> <span class="keyword">void</span> <span class="title">StartMarqueeing</span>(MarqueeType marqueeType)
{
    <span class="keyword">if</span> (marqueeType == MarqueeType.LeftToRight)
    {
        LeftToRightMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.RightToLeft)
    {
        RightToLeftMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.TopToBottom)
    {
        TopToBottomMarquee();
    }
    <span class="keyword">else</span> <span class="keyword">if</span> (marqueeType == MarqueeType.BottomToTop)
    {
        BottomToTopMarquee();
    }
}
</code></pre><p>最后就是调用了，在代码的构造函数添加载入事件：</p>
<pre><code><span class="keyword">public</span> <span class="title">MarqueeTextControl</span>()
{
    InitializeComponent();
    canMain.Height = <span class="keyword">this</span>.Height;
    canMain.Width = <span class="keyword">this</span>.Width;
    <span class="keyword">this</span>.Loaded += <span class="keyword">new</span> RoutedEventHandler(MarqueeTextControl_Loaded);
}

<span class="keyword">void</span> MarqueeTextControl_Loaded(<span class="keyword">object</span> sender, RoutedEventArgs e)
{
    StartMarqueeing(_marqueeType);
}
</code></pre><p>接下来，我们将调用这个写好的文字滚动用户控件。<br>在主窗体的视图设计器中，你可以选择使用工具箱来拖放文字滚动用户控件，也可以自己写代码。<br>先引入命名空间：</p>
<pre><code><span class="label">xmlns:</span>mar=<span class="string">"clr-namespace:Test"</span>
</code></pre><p>然后写控件：</p>
<pre><code><span class="tag">&lt;<span class="title">WrapPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Horizontal"</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从左到右滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span> <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span>  <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"LeftToRight"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从右到左滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"RightToLeft"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从上到下滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"TopToBottom"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
    <span class="tag">&lt;<span class="title">StackPanel</span> <span class="attribute">Orientation</span>=<span class="value">"Vertical"</span> &gt;</span>
        <span class="tag">&lt;<span class="title">TextBlock</span> <span class="attribute">HorizontalAlignment</span>=<span class="value">"Center"</span> <span class="attribute">FontWeight</span>=<span class="value">"Bold"</span> <span class="attribute">Text</span>=<span class="value">"从下到上滚动"</span>&gt;</span><span class="tag">&lt;/<span class="title">TextBlock</span>&gt;</span>
        <span class="tag">&lt;<span class="title">mar:MarqueeText</span> <span class="attribute">Background</span>=<span class="value">"Red"</span> <span class="attribute">FontSize</span>=<span class="value">"25"</span> <span class="attribute">MarqueeTimeInSeconds</span>=<span class="value">"10"</span>  <span class="attribute">Foreground</span>=<span class="value">"Green"</span> <span class="attribute">Margin</span>=<span class="value">"10"</span> <span class="attribute">MarqueeContent</span>=<span class="value">"文字滚动用户控件"</span> <span class="attribute">Height</span>=<span class="value">"200"</span> <span class="attribute">Width</span>=<span class="value">"200"</span> <span class="attribute">MarqueeType</span>=<span class="value">"BottomToTop"</span>&gt;</span><span class="tag">&lt;/<span class="title">mar:MarqueeText</span>&gt;</span>
    <span class="tag">&lt;/<span class="title">StackPanel</span>&gt;</span>
<span class="tag">&lt;/<span class="title">WrapPanel</span>&gt;</span>
</code></pre><p>给大家看下效果：<br><img src="/img/margintext.gif" alt="文字滚动控件"></p>
]]></summary>
    
      <category term="文章" scheme="http://ChrisyehGone.github.io/tags/%E6%96%87%E7%AB%A0/"/>
    
      <category term="WPF" scheme="http://ChrisyehGone.github.io/categories/WPF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[我的第一篇博文]]></title>
    <link href="http://ChrisyehGone.github.io/2014/06/29/My-First-Post/"/>
    <id>http://ChrisyehGone.github.io/2014/06/29/My-First-Post/</id>
    <published>2014-06-29T02:16:09.000Z</published>
    <updated>2014-07-01T03:04:57.000Z</updated>
    <content type="html"><![CDATA[<p><img src="/img/mountain_cloud.jpg" alt="淡泊明志，宁静致远"><br>很开心今天终于把静态博客弄好了，不过还有很多需要学习的地方，感谢学长的帮助，让我可以顺利搭建起<strong>hexo</strong>环境。<br><a id="more"></a></p>
]]></content>
    <summary type="html"><![CDATA[<p><img src="/img/mountain_cloud.jpg" alt="淡泊明志，宁静致远"><br>很开心今天终于把静态博客弄好了，不过还有很多需要学习的地方，感谢学长的帮助，让我可以顺利搭建起<strong>hexo</strong>环境。<br>]]></summary>
    
      <category term="感悟" scheme="http://ChrisyehGone.github.io/tags/%E6%84%9F%E6%82%9F/"/>
    
      <category term="畅谈" scheme="http://ChrisyehGone.github.io/categories/%E7%95%85%E8%B0%88/"/>
    
  </entry>
  
</feed>
